openapi: 3.0.0
info:
  title: Templates API
  description: Template application
  version: "1.0.0"
  contact:
    name: Invite & Collect
  x-api-id: 04fee60f-5135-4c09-bd3e-d132aad18ff0
  x-audience: public
servers:
  - url: https://api.etrusted.com/
paths:
  /templates:
    get:
      summary: Get a list of templates
      operationId: getAllTemplates
      tags:
        - Endpoints
      description: |
        This endpoint retrieves a list of available templates stored in eTrusted.

        The result set can be filtered by adding request parameters.
      x-parameter-comment:
        description: All query parameters are optional and should only be set if needed.
      parameters:
        - name: Autwhorization
          in: header
          description: An OAuth2 authorization header with an access token, see [OAuth2](/reference/authentication-2)
          required: true
          schema:
            type: string
        - name: type
          in: query
          description: |
            Filter for a specific template type.
            Existing template types include:

              * `QUESTIONNAIRE`
              * `INVITE`
              * `REMINDER`
              * `DOUBLE_OPT_IN_REVIEW`
              * `REVIEW_REPLY`

            If you do not set a template filter, the response will contain all templates available to you.

          schema:
            $ref: "#/components/schemas/TemplateTypeApi"
        - name: transport
          in: query
          description: Filter for a specific transport type.
          schema:
            $ref: "#/components/schemas/TemplateTransportApi"
        - name: version
          in: query
          description: Filter for a template specific version. Versions have the format '2.1', with major and minor version numbers.
          schema:
            type: string
        - name: isGlobal
          in: query
          description: Filter for global templates.
          schema:
            type: boolean
        - name: isDefault
          in: query
          description: Filter for default templates.
          schema:
            type: boolean
        - name: hasTranslations
          in: query
          description: Filter for templates that have translations.
          schema:
            type: boolean
      responses:
        "200":
          description: All templates matching the filter settings of the request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TemplateList"
  /templates/{id}:
    get:
      summary: Get a template by ID
      operationId: getTemplate
      tags:
        - Endpoints
      description: |
        This endpoint retrieves an eTrusted template by its ID.
      parameters:
        - name: Authorization
          schema:
            type: string
          in: header
          required: true
          description: An OAuth2 authorization header with an access token, see [OAuth2](/reference/authentication-2)
        - name: id
          in: path
          description: The ID of the template.
          schema:
            type: string
          required: true
      responses:
        "200":
          description: The template with the specified ID.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TemplateDetail"
  /templates/{id}/locales/{locale}:
    get:
      summary: Get a template by ID and locale
      operationId: getTemplateByLocale
      tags:
        - Endpoints
      description: |
        This endpoint retrieves an eTrusted template by its ID and locale.
      parameters:
        - name: Authorization
          schema:
            type: string
          in: header
          required: true
          description: An OAuth2 authorization header with an access token, see [OAuth2](/reference/authentication-2)
        - name: id
          in: path
          description: The ID of the template.
          schema:
            type: string
          required: true
        - name: locale
          in: path
          required: true
          description: |
            The locale that determines the language of the template content.
            The locale must be in [glibc locale format](https://lh.2xlibre.net/locales/).
          example: en_US
          schema:
            type: string
      responses:
        "200":
          description: The template with the specified ID, in the language determined by the specified locale.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TemplateDetail"
  /questionnaire-templates/render:
    post:
      operationId: post-questionnaire-templates-render
      summary: Render a questionnaire from a template
      description: |
        This method remders a questionnaire from a template, customized by the request body.
      tags:
        - Endpoints
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QuestionnairePostRequest"
        description: This object contains the necessary data to render the questionnaire.
        required: true
      responses:
        "200":
          description: The rendered questionnire as a JSON object.
          content:
            application/json:
              schema:
                type: string
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  /channels:
    post:
      tags:
        - channels
      operationId: post-channel
      description: Orchestrational synchronous internal endpoint to create a channel
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Channel"
        description: The channel object to create
        required: true
      responses:
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: InternalError
    put:
      tags:
        - channels
      operationId: put-channel
      description: Orchestrational synchronous internal endpoint to update a channel
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Channel"
        description: The channel object to update
        required: true
      responses:
        "200":
          description: Updated
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: InternalError
  "/channels/{channelId}/template-metadata":
    get:
      tags:
        - Endpoints
      operationId: get-channel-template-metadata
      summary: Get template metadata
      description: This method retrieves the template metadata associated with a channel.
      parameters:
        - name: Authorization
          in: header
          description: An OAuth2 authorization header with an access token, see [OAuth2](/reference/authentication-2)
          required: true
          schema:
            type: string
        - name: channelId
          in: path
          description: The channel ID.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The template medatata object for the requested channel ID.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetMetadata"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  "/channels/{channelId}/template-metadata/{key}":
    put:
      tags:
        - Endpoints
      operationId: put-channels-metadata
      summary: Update a template metadata key
      description: This enpoint creates or updates a value for a key in the template metadata.
      parameters:
        - name: Authorization
          in: header
          description: An OAuth2 authorization header with an access token, see [OAuth2](/reference/authentication-2)
          required: true
          schema:
            type: string
        - name: channelId
          in: path
          description: The channel ID.
          required: true
          schema:
            type: string
        - name: key
          in: path
          description: |
            The key that will be used in the templates.
            Keys must have alphanumeric camelcase format, starting with a lowercase character.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MetadataValue"
        description: This object contains the value that is stored for the specified key.
        required: true
      responses:
        "204":
          description: The template metadata entry has been stored.
        "400":
          description: The specified key violate naming rules.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    delete:
      tags:
        - Endpoints
      operationId: delete-channels-metadata
      summary: Delete a template metadata key
      description: Delete the entry for a key in the template metadata.
      parameters:
        - name: Authorization
          in: header
          description: An OAuth2 authorization header with an access token, see [OAuth2](/reference/authentication-2)
          required: true
          schema:
            type: string
        - name: channelId
          in: path
          description: The channel ID.
          required: true
          schema:
            type: string
        - name: key
          in: path
          description: |
            The key that will be used in the templates.
            Keys must have alphanumeric camelcase format, starting with a lowercase character.
          required: true
          schema:
            type: string
      responses:
        "204":
          description: The template metadata entry has been stored.
        "400":
          description: The specified key violate naming rules.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  /questionnaire-tokens:
    put:
      tags:
        - Questionnaires
      summary: Generate a questionnaire token
      description: |
        This method generates a token that links to a questionnaire.
        The token will not expire.
        An object containing the request payload is returned for convenience.
        The base64 url-encoded content is equal to the payload in the JWT property.
      parameters:
        - name: Authorization
          in: header
          description: An OAuth2 authorization header with an access token, see [OAuth2](/reference/authentication-2)
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TokenRequest"
      responses:
        "200":
          description: 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokenResponse"
  /questionnaires:
    post:
      summary: Generate a questionnaire
      tags:
        - Questionnaires
      description: |
        Generate a rendered questionnaire based on a given questionnaire template and additional data.
        A successful response contains a questionnaire token.
        The questionnaire token will not expire and links to the specified questionnaire template.
      parameters:
        - name: Authorization
          in: header
          description: An OAuth2 authorization header with an access token, see [OAuth2](/reference/authentication-2)
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransactionalQuestionnairePostRequest"
      responses:
        "201":
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/QuestionnaireRenderPostResponse"
components:
  schemas:
    TemplateTypeApi:
      type: string
      description: The template type.
      enum:
        - QUESTIONNAIRE
        - INVITE
        - REMINDER
        - DOUBLE_OPT_IN_REVIEW
        - REVIEW_REPLY
      example:
        - QUESTIONNAIRE
    TemplateTransportApi:
      type: string
      description: the template transport type.
      enum:
        - EMAIL
        - SMS
      example: EMAIL
    TemplateList:
      type: array
      description: A list of templates.
      items:
        $ref: "#/components/schemas/Template"
    Template:
      type: object
      description: This object represents a single template with all of its associated data fields.
      properties:
        id:
          type: string
          description: The unique template ID.
          example: tmp-xxxxxxxx-yyyy-xxxx-yyyy-xxxxxxxxxxxx
        type:
          $ref: "#/components/schemas/TemplateTypeApi"
        name:
          type: string
          description: The template name.
          example: exampleTemplate
        version:
          type: string
          description: The template version.
          example: "2.1"
        description:
          type: string
          description: A description that optionally states what the template is used for.
          example: "An example description."
        transport:
          type: string
          description: The temmplate transport type.
          example: EMAIL
        path:
          type: string
          description: A URL path to the template.
          #example:
        locales:
          type: array
          description: |
            A list of locales representing the languages the template is available in.
            Locales must be in [glibc locale format](https://lh.2xlibre.net/locales/).
          example: [de_DE, en_GB]
          items:
            type: string
        isGlobal:
          type: boolean
          description: A flag that reflects whether the template is available to all accounts or not.
          example: false
        isDefault:
          type: boolean
          description: A flag that reflects whether the template is a default template.
          example: false
        hasTranslations:
          type: boolean
          description: A flag that reflects whether the template has translations or not.
          example: true
        createdAt:
          type: string
          format: date-time
          description: The date and time when the template was created, in the ISO 8601 and RFC3339 compliant format `yyyy-MM-dd’T’HH:mm:ss.SSSZ`. Check the [glossary](/docs/glossory#iso-8601) for examples of valid datetime formats.
          example: "2018-02-01T17:09:41.790Z"
        updatedAt:
          type: string
          format: date-time
          description: The date and time when the template was last modified, in the ISO 8601 and RFC3339 compliant format `yyyy-MM-dd’T’HH:mm:ss.SSSZ`. Check the [glossary](/docs/glossory#iso-8601) for examples of valid datetime formats.
          example: "2018-02-01T17:09:41.790Z"
    TemplateDetail:
      allOf:
        - $ref: "#/components/schemas/Template"
        - type: object
          properties:
            content:
              type: string
              description: The template content.
              #example:
            requiredVariables:
              type: array
              description: This is a list of variables that are required for the template.
              #example:
              items:
                type: string
    Channel:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier for this channel object
        accountRef:
          type: string
          description: The unique identifier of the associated account object
        name:
          type: string
          description: The name of the channel
        address:
          type: string
          description: The address of the channel
        locale:
          type: string
          description: The locale belonging to the channel
          example: en_US
          format: locale
        url:
          type: string
          description: The URL of the shop
        logoUrl:
          type: string
          description: The URL of the logo of the shop
    MetadataValue:
      type: object
      properties:
        value:
          type: string
          description: A string value for a the specified key.
    GetMetadata:
      type: object
      properties:
        metadata:
          type: object
          description: The metadata stored for this channel.
          additionalProperties:
            type: string
    QuestionnairePostRequest:
      type: object
      properties:
        accountRef:
          type: string
          description: The account reference UUID.
          example: acc-xxxxxxxx-yyyy-xxxx-yyyy-xxxxxxxxxxxx
        defaultLocale:
          type: string
          description: |
            The default locale that determines the language the questionnaire is displayed in.
            Locales must be in [glibc locale format](https://lh.2xlibre.net/locales/).
          example: [de_DE, en_GB]
        questionnaireTemplateRef:
          type: string
          description: The questionnaire template reference UUID.
          example: qrt-xxxxxxxx-yyyy-xxxx-yyyy-xxxxxxxxxxxx
        channel:
          type: object
          description: An object that identifies the channel the questionnaire is rendered for.
          properties:
            id:
              type: string
              description: The channel UUID.
              example: chl-xxxxxxxx-yyyy-xxxx-yyyy-xxxxxxxxxxxx
        saveRenderedQuestionnaire:
          type: boolean
          description: |
            A boolean value that determines whether the rendered questionnaire will be stored within eTrusted.
            If it is stored, the `questionnaireRef` UUID will be created.
    TokenRequest:
      description: The request parameters for the questionnaire token endpoint.
      type: object
      required:
        - questionnaireTemplateRef
        - questionnaireLocale
        - questionnairePayloadTransferMethod
        - system
        - systemVersion
      properties:
        questionnaireTemplateRef:
          type: string
          description: The questionnaire template reference UUID.
          example: qrt-xxxxxxxx-yyyy-xxxx-yyyy-xxxxxxxxxxxx
        questionnaireLocale:
          type: string
          description: |
            The locale tht determines the questionnaire language and localisation.
            The locale must be in [glibc locale format](https://lh.2xlibre.net/locales/).
          example: en_US
        questionnairePayloadTransferMethod:
          type: string
          enum:
            - UNSIGNED
            - SIGNED
            - UNSIGNED_ENCRYPTED
            - SIGNED_ENCRYPTED
          description: |
            The payload transfer method that will be used to provide additional parameters.
            Select a transfer method for required additional questionnaire data, according to your individual data security concerns:
             * UNSIGNED - The payload is transfered as unsigned JWS.
             * SIGNED - The payload is transferred as signed JWS.
             * UNSIGNED_ENCRYPTED - The payload is transferred as unsigned JWE.
             * SIGNED_ENCRYPTED - The payload is transferred as signed JWE.
          example: UNSIGNED
        system:
          description: |
            The system parameter defines the system that issues the questionnaire token API call.
            This way you can identify the source system that used the Questionnaire API.
          type: string
          example: customer_system_name
        systemVersion:
          description: The system version parameter defines the version of the source system.
          type: string
          example: "1.0"
    TokenResponse:
      type: object
      properties:
        jwt:
          type: string
          description: The JWT in compact serialization format as defined in [RFC7515](https://tools.ietf.org/html/rfc7515).
          example: head.payload.signature
        questionnaireTokenPayload:
          $ref: "#/components/schemas/Token"
    Token:
      type: object
      description: The token generated by eTrusted to access a questionnaire.
      required:
        - questionnaireTemplateRef
        - questionnaireLocale
      properties:
        questionnaireTemplateRef:
          type: string
          description: The questionnaire template reference UUID.
          example: qrt-xxxxxxxx-yyyy-xxxx-yyyy-xxxxxxxxxxxx
        questionnaireLocale:
          type: string
          description: |
            The locale tht determines the questionnaire language and localisation.
            The locale must be in [glibc locale format](https://lh.2xlibre.net/locales/).
          example: en_US
        collectionProcess:
          type: string
          enum:
            - OPEN_FEEDBACK
            - CLOSED_FEEDBACK
          description: |
            The way feedback collection is handled.

            `OPEN_FEEDBACK` allows any user to leave feedback.
            `CLOSED_FEEDBACK` restricts the feedback collection to verified contacts.
          example: OPEN_FEEDBACK
        questionnairePayloadTransferMethod:
          type: string
          enum:
            - UNSIGNED
            - SIGNED
            - UNSIGNED_ENCRYPTED
            - SIGNED_ENCRYPTED
          description: >
            The payload transfer method that will be used to provide the
            additional parameters. You can choose how you want to transfer the
            required additional data to the questionnaire, depending on your
            individual data security concerns.
             * UNSIGNED - The payload is transfered as unsigned JWS.
             * SIGNED - The payload is transferred as signed JWS
             * UNSIGNED_ENCRYPTED - The payload is transferred as unsigned JWE
             * SIGNED_ENCRYPTED - The payload is transferred as signed JWE
          example: UNSIGNED
        iss:
          description: The `iss` claim property identifies the issuer of the JWT.
          type: string
          example: https://www.etrusted.com
        aud:
          description: The `aud` claim property identifies the audience that receives the JWT.
          type: string
          example: https://feedback.etrusted.com
        iat:
          description:
            The "iat" claim (issued at) identifies the time at which the JWT was
            issued. This claim can be used to determine the age of the JWT. Its
            value MUST be a number containing a NumericDate value.
          type: number
          example: 1527756942
        accountRef:
          description: The account reference UUID for the questionnaire.
          type: string
          example: acc-xxxxxxxx-yyyy-xxxx-yyyy-xxxxxxxxxxxx
        apiVersion:
          description: The API version of the template service that was used for the system that issues the call.
          type: string
          example: 1.0.0
        system:
          description: |
            The system parameter defines the system that issues the questionnaire token API call.
            This way you can identify the source system that used the Questionnaire API.
          type: string
          example: customer_system_name
        systemVersion:
          description: The system version parameter defines the version of the source system.
          type: string
          example: "1.0"
          pattern: ^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(-(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(\.(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*)?(\+[0-9a-zA-Z-]+(\.[0-9a-zA-Z-]+)*)?$
    TransactionalQuestionnairePostRequest:
      type: object
      required:
        - customer
        - channel
        - transaction
        - questionnaireTemplate
        - event
        - system
        - systemVersion
      properties:
        customer:
          type: object
          description: customer email, mobile or address must be passed
          properties:
            firstName:
              type: string
              description: First name of the customer.
              example: John
            lastName:
              type: string
              description: Last name of the customer.
              example: Doe
            email:
              type: string
              format: email
              description: Email address of the customer. It must be a valid email address.
              example: john.doe@example.com
            address:
              type: string
              description: Address of the customer.
              example: Anystr. 17, 12345, Anycity, Anystate 12345
            mobile:
              type: string
              description: |
                Mobile telephone number of the customer.
                The mobile number must have international format including `+` and country code. (e.g. `+49123456789`).
              example: "+49123456789"
        accountRef:
          type: string
          description: The account reference UUID.
          example: acc-xxxxxxxx-yyyy-xxxx-yyyy-xxxxxxxxxxxx
        channel:
          type: object
          description: An object that identifies a channel.
          required:
            - id
          properties:
            id:
              type: string
              description: The channel ID.
              example: chl-xxxxxxxx-yyyy-xxxx-yyyy-xxxxxxxxxxxx
        transaction:
          type: object
          description: The transaction represents the interaction for which the customer writes a review.
          required:
            - reference
          properties:
            reference:
              type: string
              description: |
                The reference property can contain any reference used by organisations to identify the transaction.

                This string must be unique (the order or invoice number, e.g. `order-12345`).
              example: order-12345
            date:
              type: string
              description: The date and time when the transaction took place. It is a timestamp in the ISO 8601 and RFC3339 compliant format `yyyy-MM-dd’T’HH:mm:ss.SSSZ`. Check the [glossary](/docs/glossory#iso-8601) for examples of valid datetime formats.
              format: date-time
              example: "2018-02-01T17:09:41.790Z"
        questionnaireTemplate:
          type: object
          required:
            - id
          properties:
            id:
              type: string
              description: The questionnaire template ID.
              example: qrt-xxxxxxxx-yyyy-xxxx-yyyy-xxxxxxxxxxxx
        defaultLocale:
          type: string
          description: |
            The default locale that determines the language the questionnaire is displayed in.
            Locales must be in [glibc locale format](https://lh.2xlibre.net/locales/).
          example: [de_DE, en_GB]
        event:
          type: object
          required:
            - id
            - type
          properties:
            type:
              type: string
              description: |
                The type property is the event type.
                It represents the touchpoint that triggered the event.
              example: checkout
            id:
              type: string
              description: The event UUID.
              example: evt-xxxxxxxx-yyyy-xxxx-yyyy-xxxxxxxxxxxx
            metadata:
              type: object
              description: |
                Add more information to the events object via the metadata object.
                This may be anything that you want to track or evaluate.
              additionalProperties:
                type: string
        system:
          type: string
          description: |
            The system parameter defines the system that issues the Events API call.
            This way you can identify the source system that used the Events API.
          example: customer_system_name
        systemVersion:
          type: string
          description: |
            The system version parameter defines the version of the source system.
          example: "1.0"
    QuestionnaireRenderPostResponse:
      type: object
      properties:
        id:
          type: string
          description: The rendered questionnaire UUID.
          example: qre-xxxxxxxx-yyyy-xxxx-yyyy-xxxxxxxxxxxx
        questionnaireToken:
          type: string
          description: The JWT in compact serialization format as defined in [RFC7515](https://tools.ietf.org/html/rfc7515).
        questionnaireUrl:
          type: string
          description: The URL to the questionnaire.
x-readme:
  explorer-enabled: false
